<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jaagro.report.biz.mapper.tms.OrderReportMapperExt">
    <select id="getDeptOrderDailyDataListFromTms" resultType="com.jaagro.report.api.entity.DeptOrderDaily">
            select createDate as reportTime ,dept as departmentId,type as goodsType,
            sum(ordertotal) as totalOrderQuantity,
            sum(anomalyTotal) as anomalyWaybillQuantity,
            sum(refusedTotal) as refuseWaybillQuantity,
            sum(waybillTotal) as totalWaybillQuantity ,sum(waybillFinishTotal) as completeWaybillQuantity,
            sum(QuatityTotal) as goodsQuantity,
            sum(WeightTotal) as goodsWeight from(
                -- 拒单总数
                SELECT createDate,dept,CASE WHEN type=1 then 1 when type=2 then 2 when type in(3,4,5,6)  then 3 end as type,
                    0 as ordertotal,0 as anomalyTotal,count(1) as refusedTotal,0 as waybillTotal,0 as waybillFinishTotal,0 as QuatityTotal,0 as WeightTotal from(
                    SELECT  distinct
                        date_format(t.create_time, '%Y-%m-%d') AS createDate ,
                        w.network_id AS dept,
                        ods.goods_type AS type,
                        t.waybill_id
                    FROM waybill w
                    LEFT JOIN waybill_tracking t ON w.id = t.waybill_id
                    INNER JOIN orders ods on w.order_id = ods.id
                    WHERE t.new_status LIKE '%拒单%' and w.enabled=1
                ) T_RefusedWaybillStatistics group by createDate,dept,type

                UNION
                -- 异常运单总数
                SELECT createDate,dept,CASE WHEN type=1 then 1 when type=2 then 2 when type in(3,4,5,6)  then 3 end as type,
                    0 as ordertotal,count(1)  as anomalyTotal,0 as refusedTotal,0 as waybillTotal,0 as waybillFinishTotal,0 as QuatityTotal,0 as WeightTotal from(
                    SELECT distinct
                     date_format(t.create_time, '%Y-%m-%d') AS createDate,
                     w.network_id AS dept,
                     ods.goods_type AS type,
                     t.waybill_id
                    FROM waybill w
                    RIGHT JOIN waybill_anomaly t ON w.id = t.waybill_id
                    INNER JOIN orders ods on w.order_id = ods.id and w.waybill_status!='已作废' and w.enabled=1
                )  T_AnomalyWaybillStatistics  group by createDate,dept,type

                UNION
                -- 运单总数
                SELECT createDate,dept,CASE WHEN type=1 then 1 when type=2 then 2 when type in(3,4,5,6)  then 3 end as type,
                    0 as ordertotal,0 as anomalyTotal,0 as refusedTotal,waybillTotal,
                    0 as waybillFinishTotal,0 as QuatityTotal,0 as WeightTotal
                from(
                    SELECT
                        date_format(w.create_time, '%Y-%m-%d') AS createDate,
                        w.network_id AS dept,
                        ods.goods_type AS type,
                        count(1) as waybillTotal
                    FROM waybill w INNER JOIN orders ods on w.order_id = ods.id where w.enabled=1 group by createDate,dept,type
                ) T_WaybillStatistics

                UNION
                -- 运单完成单数
                SELECT createDate,dept,CASE WHEN type=1 then 1 when type=2 then 2 when type in(3,4,5,6)  then 3 end as type,
                      0 as ordertotal,0 as anomalyTotal,0 as refusedTotal,
                      0 as waybillTotal,
                      waybillFinishTotal,0 as QuatityTotal,0 as WeightTotal
                from(
                      SELECT
                          date_format(w.modify_time, '%Y-%m-%d') AS createDate,
                          w.network_id AS dept,
                          ods.goods_type AS type,
                          count(1) as waybillFinishTotal
                      FROM
                        waybill w INNER JOIN orders ods on w.order_id = ods.id
                        where w.enabled=1 and w.waybill_status='已完成' and  w.modify_time is not null
                        group by createDate,dept,type
                ) T_WaybillFinishedStatistics

                UNION
                -- 订单总数
                SELECT createDate,dept, type,
                        ordertotal,0 as anomalyTotal,0 as refusedTotal,0 as waybillTotal,0 as waybillFinishTotal,0 as QuatityTotal,0 as WeightTotal from(
                    SELECT
                        date_format(create_time, '%Y-%m-%d') AS createDate,
                        network_id AS dept,
                        CASE WHEN goods_type=1 then 1 when goods_type=2 then 2 when goods_type in(3,4,5,6)  then 3 end as type,
                        count(1) as ordertotal
                    from orders where order_status!='取消' group by createDate,dept,type
                ) T_OrderStatistics

                UNION
                -- 数量、重量统计
                SELECT createDate,dept,type,0 as ordertotal,0 as anomalyTotal,0 as refusedTotal,0 as waybillTotal,0 as waybillFinishTotal,
                sum(chknQuantity + pigQuantity) as QuatityTotal,sum(chknWeight + FodderWeight) as WeightTotal
                from(
                            SELECT
                                0 as chknQuantity,	-- 1 羽（毛鸡） 计划数量
                                sum( CASE WHEN o.goods_type=1 THEN wg.unload_weight ELSE 0 END) as  chknWeight,	-- 1 羽（毛鸡） 卸货重量
                                sum( CASE WHEN o.goods_type=2 THEN wg.unload_weight ELSE 0 END) as  FodderWeight,	-- 2 吨（饲料） 卸货重量
                                sum( CASE when o.goods_type in(3,4,5,6) THEN wg.unload_quantity ELSE 0 END) as pigQuantity,	-- 3 头（猪）   卸货数量
                                date_format(w.modify_time, '%Y-%m-%d') AS createDate,
                                w.network_id AS dept,
                                CASE WHEN o.goods_type=1 then 1 when o.goods_type=2 then 2 when o.goods_type in(3,4,5,6)  then 3 end as type
                            FROM waybill w
                            inner join orders o on w.order_id=o.id
                            inner JOIN waybill_goods wg ON w.id = wg.waybill_id
                            where w.waybill_status='已完成' and w.enabled=1  and o.direct_order_flag ='n'  group by createDate,dept,type
                        UNION
                            SELECT
                                0 as chknQuantity,	-- 1 羽（毛鸡） 计划数量
                                sum( CASE WHEN o.goods_type=1 THEN wg.unload_weight ELSE 0 END) as  chknWeight,	-- 1 羽（毛鸡） 卸货重量
                                sum( CASE WHEN o.goods_type=2 THEN wg.unload_weight ELSE 0 END) as  FodderWeight,	-- 2 吨（饲料） 卸货重量
                                sum( CASE when o.goods_type in(3,4,5,6) THEN wg.unload_quantity ELSE 0 END) as pigQuantity,	-- 3 头（猪）   卸货数量
                                date_format(w.modify_time, '%Y-%m-%d') AS createDate,
                                w.network_id AS dept,
                                CASE WHEN o.goods_type=1 then 1 when o.goods_type=2 then 2 when o.goods_type in(3,4,5,6)  then 3 end as type
                            FROM waybill w
                            inner join orders o on w.order_id=o.id
                            inner JOIN waybill_goods wg ON w.id = wg.waybill_id
                            where w.waybill_status='已完成' and w.enabled=1  and w.receipt_status=2 and o.direct_order_flag='y'  group by createDate,dept,type
                        UNION
                            SELECT
                                sum( CASE  WHEN o.goods_type=1 THEN g.goods_quantity ELSE 0 END) as chknQuantity,	-- 1 羽（毛鸡） 计划数量
                                0 chknWeight,	-- 1 羽（毛鸡） 卸货重量
                                0 FodderWeight,	-- 2 吨（饲料） 卸货重量
                                0 as pigQuantity,	-- 3 头（猪）   卸货数量
                                date_format(o.create_time, '%Y-%m-%d') AS createDate,
                                o.network_id AS dept,
                                CASE WHEN o.goods_type=1 then 1 when o.goods_type=2 then 2 when o.goods_type in(3,4,5,6)  then 3 end as type
                            FROM order_goods g left join orders o on g.order_id=o.id
                            where o.order_status!='取消' group by createDate,dept,type
                ) T_QuatityTotalWeightTotalStatistics group by createDate,dept,type
            )totalTable
        <where>

            <if test="reportTime != null and reportTime.length()>0">createDate=#{reportTime}</if>

            <if test="departIds!=null and departIds.size()>0">
                and dept in
                <foreach collection="departIds" open="(" separator="," close=")" item="did">
                    ${did}
                </foreach>
            </if>
            <if test="goodsType != null and goodsType.length()>0">and type = #{goodsType}</if>

        </where>
             group by createDate,dept,type order by createDate

    </select>
    <select id="listRedBoardData" resultType="com.jaagro.report.api.dto.RedBlackBoardDto">
        select
           dr.name as driver, xmb.daqu as department, xmb.xiangmubu as network,
           wt1.create_time as sendTime, wt2.create_time as receiveTime,
           TIMESTAMPDIFF(SECOND, wt1.create_time, wt2.create_time)  as receiveDate
        from
          ( select waybill_id, max(id) id, max(create_time) create_time
            from tmsserver2.waybill_tracking
            where new_status = '待接单' and create_time between #{startDay} and #{endDay}
            group by waybill_id
          )  wt1
          inner join
          ( select waybill_id, max(id) id, driver_id, max(create_time) create_time
            from tmsserver2.waybill_tracking
            where new_status = '待出发'
            group by waybill_id, driver_id order by max(create_time)
          ) wt2 on wt1.waybill_id = wt2.waybill_id and wt2.id > wt1.id
          inner join userserver.driver dr on wt2.driver_id = dr.id
          inner join tmsserver2.waybill wb on wb.id = wt1.waybill_id
           inner join (
            select Case when xn.department_name = '虚拟项目部' then dq.department_name else xn.department_name end as DaQu,
              x.department_name as XiangMuBu, x.id as Xid
            from userserver.department x
              inner join userserver.department xn on x.parent_id = xn.id
              inner join userserver.department dq on xn.parent_id = dq.id
            where x.netpoint =1 ) as xmb on wb.network_id = xmb.xid
        order by TIMESTAMPDIFF(SECOND, wt1.create_time, wt2.create_time)
    </select>
    <select id="listBlackBoardData" resultType="com.jaagro.report.api.dto.RedBlackBoardDto">
        select dr.name as driver, xmb.daqu as department, xmb.xiangmubu as network,
               wt1.create_time as sendTime, wt2.create_time as receiveTime,
               TIMESTAMPDIFF(SECOND, wt1.create_time, wt2.create_time)   as receiveDate
            from
               ( select waybill_id, driver_id,  max(create_time) create_time
                 from tmsserver2.waybill_tracking
                 where new_status = '前往装货地' and create_time  between #{startDay} and #{endDay}
                 group by waybill_id, driver_id
               ) as wt1
              inner join
               ( select waybill_id, driver_id, max(create_time) create_time
                 from tmsserver2.waybill_tracking
                 where new_status = '已完成'
                 group by waybill_id, driver_id
               ) as wt2 on wt1.waybill_id = wt2.waybill_id and wt1.waybill_id = wt2.waybill_id
              inner join userserver.driver dr on wt1.driver_id = dr.id
              inner join tmsserver2.waybill wb on wb.id = wt1.waybill_id
              inner join (
                select Case when xn.department_name = '虚拟项目部' then dq.department_name else xn.department_name end as DaQu,
                  x.department_name as XiangMuBu, x.id as Xid
                from userserver.department x
                  inner join userserver.department xn on x.parent_id = xn.id
                  inner join userserver.department dq on xn.parent_id = dq.id
                where x.netpoint =1 ) as xmb on wb.network_id = xmb.xid
            order by TIMESTAMPDIFF(SECOND, wt1.create_time, wt2.create_time)
    </select>
</mapper>
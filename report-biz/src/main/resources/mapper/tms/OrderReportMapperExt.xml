<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jaagro.report.biz.mapper.tms.OrderReportMapperExt">
    <select id="getDeptOrderDailyDataListFromTms" resultType="com.jaagro.report.api.entity.DeptOrderDaily">
            select createDate as reportTime ,dept as departmentId,type as goodsType,
            sum(ordertotal) as totalOrderQuantity,
            sum(anomalyTotal) as anomalyWaybillQuantity,
            sum(refusedTotal) as refuseWaybillQuantity,
            sum(waybillTotal) as totalWaybillQuantity ,sum(waybillFinishTotal) as completeWaybillQuantity,
            sum(QuatityTotal) as goodsQuantity,
            sum(WeightTotal) as goodsWeight from(
                -- 拒单总数
                SELECT createDate,dept,CASE WHEN type=1 then 1 when type=2 then 2 when type in(3,4,5,6)  then 3 end as type,
                    0 as ordertotal,0 as anomalyTotal,count(1) as refusedTotal,0 as waybillTotal,0 as waybillFinishTotal,0 as QuatityTotal,0 as WeightTotal from(
                    SELECT  distinct
                        date_format(t.create_time, '%Y-%m-%d') AS createDate ,
                        w.department_id AS dept,
                        ods.goods_type AS type,
                        t.waybill_id
                    FROM waybill w
                    LEFT JOIN waybill_tracking t ON w.id = t.waybill_id
                    INNER JOIN orders ods on w.order_id = ods.id
                    WHERE t.new_status LIKE '%拒单%' and w.enabled=1
                ) T_RefusedWaybillStatistics group by createDate,dept,type

                UNION
                -- 异常运单总数
                SELECT createDate,dept,CASE WHEN type=1 then 1 when type=2 then 2 when type in(3,4,5,6)  then 3 end as type,
                    0 as ordertotal,count(1)  as anomalyTotal,0 as refusedTotal,0 as waybillTotal,0 as waybillFinishTotal,0 as QuatityTotal,0 as WeightTotal from(
                    SELECT distinct
                     date_format(t.create_time, '%Y-%m-%d') AS createDate,
                     w.department_id AS dept,
                     ods.goods_type AS type,
                     t.waybill_id
                    FROM waybill w
                    RIGHT JOIN waybill_anomaly t ON w.id = t.waybill_id
                    INNER JOIN orders ods on w.order_id = ods.id and w.waybill_status!='已作废' and w.enabled=1
                )  T_AnomalyWaybillStatistics  group by createDate,dept,type

                UNION
                -- 运单总数，完成单数
                SELECT createDate,dept,CASE WHEN type=1 then 1 when type=2 then 2 when type in(3,4,5,6)  then 3 end as type,
                    0 as ordertotal,0 as anomalyTotal,0 as refusedTotal,waybillTotal,waybillFinishTotal,0 as QuatityTotal,0 as WeightTotal from(
                    SELECT
                        date_format(w.create_time, '%Y-%m-%d') AS createDate,
                        w.department_id AS dept,
                        ods.goods_type AS type,
                        count(1) as waybillTotal,
                        sum( CASE waybill_status WHEN '已完成' THEN 1 ELSE 0 END) as waybillFinishTotal
                    FROM
                        waybill w
                    INNER JOIN orders ods
                     on w.order_id = ods.id
                     where w.enabled=1 group by createDate,dept,type
                ) T_WaybillStatistics

                UNION
                -- 订单总数
                SELECT createDate,dept, type,
                        ordertotal,0 as anomalyTotal,0 as refusedTotal,0 as waybillTotal,0 as waybillFinishTotal,0 as QuatityTotal,0 as WeightTotal from(
                    SELECT
                        date_format(create_time, '%Y-%m-%d') AS createDate,
                        department_id AS dept,
                        CASE WHEN goods_type=1 then 1 when goods_type=2 then 2 when goods_type in(3,4,5,6)  then 3 end as type,
                        count(1) as ordertotal
                    from orders  group by createDate,dept,type
                ) T_OrderStatistics

                UNION
                -- 数量、重量统计
                SELECT createDate,dept,type,0 as ordertotal,0 as anomalyTotal,0 as refusedTotal,0 as waybillTotal,0 as waybillFinishTotal,
                        sum(chknQuantity + pigQuantity) as QuatityTotal,sum(chknWeight + FodderWeight) as WeightTotal from(
                    SELECT
                    sum( CASE  WHEN o.goods_type=1 THEN g.goods_quantity*8 ELSE 0 END) as chknQuantity,	-- 1 羽（毛鸡） 计划数量
                    sum( CASE WHEN o.goods_type=1 THEN g.unload_weight ELSE 0 END) as  chknWeight,	-- 1 羽（毛鸡） 卸货重量
                    sum( CASE WHEN o.goods_type=2 THEN g.unload_weight ELSE 0 END) as  FodderWeight,	-- 3 吨（饲料） 卸货重量
                    sum( CASE when o.goods_type in(3,4,5,6) THEN g.unload_quantity ELSE 0 END) as pigQuantity,	-- 2 头（猪）   卸货数量
                     date_format(w.create_time, '%Y-%m-%d') AS createDate,
                     w.department_id AS dept,
                     CASE WHEN o.goods_type=1 then 1 when o.goods_type=2 then 2 when o.goods_type in(3,4,5,6)  then 3 end as type,
                     g.waybill_id
                    FROM
                     waybill w
                     inner join orders o on w.order_id=o.id
                     inner JOIN waybill_goods g ON w.id = g.waybill_id
                    where w.waybill_status='已完成' and w.enabled=1
                      group by createDate,dept,type,waybill_id
                ) T_QuatityTotalWeightTotalStatistics group by createDate,dept,type

            )totalTable
        <where>

            <if test="reportTime != null and reportTime.length()>0">createDate=#{reportTime}</if>

            <if test="departIds!=null and departIds.size()>0">
                and dept in
                <foreach collection="departIds" open="(" separator="," close=")" item="did">
                    ${did}
                </foreach>
            </if>
            <if test="goodsType != null and goodsType.length()>0">and type = #{goodsType}</if>

        </where>
             group by createDate,dept,type order by createDate

    </select>
</mapper>